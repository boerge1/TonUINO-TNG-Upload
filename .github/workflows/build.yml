name: 'Build'
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Executables
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            BUILD_CMD: pyinstaller -F --add-binary Linux/avrdude:. --add-data Linux/avrdude.conf:. TonUINO_TNG_upload.py
            OUT_FILE_NAME: TonUINO_TNG_upload
          - os: macos-latest
            BUILD_CMD: pyinstaller -F --add-binary MacOS/avrdude:. --add-data MacOS/avrdude.conf:. TonUINO_TNG_upload.py
            OUT_FILE_NAME: TonUINO_TNG_upload
          - os: windows-latest
            BUILD_CMD: pyinstaller -F --add-binary Windows/avrdude.exe:. --add-data Windows/avrdude.conf:. TonUINO_TNG_upload.py
            OUT_FILE_NAME: TonUINO_TNG_upload.exe
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.13.1'
      - name: Install dependencies for ${{ matrix.os }}
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Pre-Build for ${{ matrix.os }}
        if: ${{ matrix.PRE_BUILD_CMD != '' }}
        run: ${{ matrix.PRE_BUILD_CMD }}
      - name: Build with pyinstaller for ${{ matrix.os }}
        run: ${{ matrix.BUILD_CMD }}
      - name: Post-Build for ${{ matrix.os }}
        if: ${{ matrix.POST_BUILD_CMD != '' }}
        run: ${{ matrix.POST_BUILD_CMD }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{runner.os}}
          path: ./dist/${{ matrix.OUT_FILE_NAME }}

